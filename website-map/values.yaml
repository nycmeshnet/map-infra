backend:
  replicaCount: 1
  image:
    repository: docker.io/nginx
    pullPolicy: IfNotPresent
    # tag: "1.27.5-bookworm"
    digest: sha256:c15da6c91de8d2f436196f3a768483ad32c258ed4e1beb3d367a27ed67253e66
  service:
    type: ClusterIP
    port: 80
  enableReadinessProbe: false
  readinessProbeInitialDelaySeconds: 20
  enableLivenessProbe: false
  livenessProbeInitialDelaySeconds: 20
  livenessProbePeriodSeconds: 15
  resources: {}

cron:
  image:
    repository: docker.io/python
    pullPolicy: IfNotPresent
    # tag: "3.13-alpine3.21"
    digest: sha256:f80206d96683c1b27cd522dc300f791a48362b895ad5c0bdd26f78f853c76fa5

imageCredentials:
  registry: docker.io

pvc_name: "website-map-data"
pvc_size: "1Gi"

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
